// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addToCart/{id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a dish to the user's cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "Add to Cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added to cart",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/addToFavourite/{id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Adds a dish to the user's favourites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Favourites"
                ],
                "summary": "Add item to favourites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Dish added to favourites successfully",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Item already added / Failed to add to favourites",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid or expired token",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/categories/addCategory": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Category"
                ],
                "summary": "Add a category",
                "parameters": [
                    {
                        "description": "Category creation request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.CreateCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully created",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/categories/{id}/edit": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Category"
                ],
                "summary": "Edit a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category update request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UpdateCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully updated",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/coupons": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches all available coupons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Coupons"
                ],
                "summary": "Get all coupons",
                "responses": {
                    "200": {
                        "description": "Success: No coupons are available",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access: User is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to fetch coupons",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/coupons/add": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Adds a new coupon to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Coupons"
                ],
                "summary": "Create a new coupon",
                "parameters": [
                    {
                        "description": "Coupon creation request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.CreateCouponReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Coupon created successfully",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid fields in the request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "409": {
                        "description": "Conflict: Coupon with the same code already exists",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to create coupon",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/coupons/{id}": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates the status of a coupon in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Coupons"
                ],
                "summary": "Update coupon status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New status for the coupon",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Coupon status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid fields in the request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "404": {
                        "description": "Not Found: Coupon with the given ID not found",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to update coupon status",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin login",
                "parameters": [
                    {
                        "description": "Admin Login Request",
                        "name": "adminLoginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.AdminLoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/res.AdminLoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/sellers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a list of all sellers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Seller"
                ],
                "summary": "Get all sellers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/res.SellerListRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/sellers/{id}/block": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Block a specific seller by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Seller"
                ],
                "summary": "Block a seller",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller successfully blocked",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/sellers/{id}/unblock": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Unblock a specific seller by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Seller"
                ],
                "summary": "Unblock a seller",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller successfully unblocked",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/sellers/{id}/verify": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Verify a specific seller by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Seller"
                ],
                "summary": "Verify a seller",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller successfully verified",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a list of all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin User"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/res.UserListRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/block": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Block a specific user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin User"
                ],
                "summary": "Block a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully blocked",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/unblock": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Unblock a specific user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin User"
                ],
                "summary": "Unblock a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully unblocked",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/cart": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch the user's cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "View Cart",
                "responses": {
                    "200": {
                        "description": "Cart is empty",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/cart/checkout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Place a new order for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Order"
                ],
                "summary": "Place an order",
                "parameters": [
                    {
                        "description": "New order request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.NewOrderReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully placed order",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/cart/empty": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Empty the user's cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "Empty Cart",
                "responses": {
                    "200": {
                        "description": "Successfully emptied cart",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/cart/{id}/decrement": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Decrement the quantity of a dish in the user's cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "Decrement Cart Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully decremented cart item",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/cart/{id}/deleteItem": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a dish from the user's cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "Delete Cart Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted cart item",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Retrieve a list of all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/res.AllCategoriesRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Retrieve a list of all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get all categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/res.AllCategoriesRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches all available coupons for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Coupons"
                ],
                "summary": "Get all coupons for the user",
                "responses": {
                    "200": {
                        "description": "Success: No coupons are available",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access: User is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to fetch coupons",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/coupons/available": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches the coupons available for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Coupons"
                ],
                "summary": "Get available coupons for user",
                "responses": {
                    "200": {
                        "description": "Success: No coupons available",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to fetch available coupons",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/coupons/redeemed": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches the coupons redeemed by the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Coupons"
                ],
                "summary": "Get redeemed coupons by user",
                "responses": {
                    "200": {
                        "description": "Success: No coupons are redeemed",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to fetch redeemed coupons",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/dishes": {
            "get": {
                "description": "Retrieve a paginated list of dishes for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get paginated list of dishes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page number (default: 1)",
                        "name": "p",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "l",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Item category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Item by seller",
                        "name": "seller",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched dishes",
                        "schema": {
                            "$ref": "#/definitions/res.DishListRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/dishes/{id}": {
            "get": {
                "description": "Retrieve a specific dish by ID for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get a dish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched dish",
                        "schema": {
                            "$ref": "#/definitions/res.SingleDishRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/favourites": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches the list of user's favourite dishes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Favourites"
                ],
                "summary": "View favourite items",
                "responses": {
                    "200": {
                        "description": "Success: Favourites are empty",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid or expired token",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/favourites/{id}/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a dish from the user's favourites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Favourites"
                ],
                "summary": "Delete item from favourites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Dish deleted from favourites successfully",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Item already deleted / Failed to delete from favourites",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid or expired token",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/forgotPassword": {
            "post": {
                "description": "Forgot user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Forgot Password",
                "parameters": [
                    {
                        "description": "Forgot password request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.ForgotPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully sent otp to number related to the given email",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate and log in as a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User login request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UserLoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/res.UserLoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/offers": {
            "get": {
                "description": "Fetches a list of all offers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get all offers",
                "responses": {
                    "200": {
                        "description": "Success: List of offers fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/res.OfferListRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to fetch offers",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "View details of all orders for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Order"
                ],
                "summary": "View all orders for the user",
                "responses": {
                    "200": {
                        "description": "Successfully fetched orders",
                        "schema": {
                            "$ref": "#/definitions/res.ViewAllOrdersRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "View details of a specific order for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Order",
                    "Seller Order"
                ],
                "summary": "View a specific order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched order",
                        "schema": {
                            "$ref": "#/definitions/res.ViewOrderRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "View User Details",
                "responses": {
                    "200": {
                        "description": "Successfully fetched user details",
                        "schema": {
                            "$ref": "#/definitions/res.UserDetailsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/profile/addAddress": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a new address for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Add an address",
                "parameters": [
                    {
                        "description": "New address request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.NewAddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added address",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/profile/address": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "View details of all addresses for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "View all addresses",
                "responses": {
                    "200": {
                        "description": "Successfully fetched addresses",
                        "schema": {
                            "$ref": "#/definitions/res.ViewAddressListRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/profile/address/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "View details of a specific address for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "View a specific address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched address",
                        "schema": {
                            "$ref": "#/definitions/res.ViewAddressRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing address for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Update address",
                "parameters": [
                    {
                        "description": "Update address request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UpdateAddressReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated address",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/profile/changePassword": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Change existing password of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Change user password request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.ChangePasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed user password details",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/profile/edit": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user name, email details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Profile"
                ],
                "summary": "Update User Details",
                "parameters": [
                    {
                        "description": "Edit user details request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UpdateUserDetailsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user details",
                        "schema": {
                            "$ref": "#/definitions/res.UserDetailsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/resetPassword": {
            "post": {
                "description": "Reset user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Reset password request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.ResetPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reset Password Successfull",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/search/dishes": {
            "get": {
                "description": "Search for dishes based on a query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Search dishes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched dishes",
                        "schema": {
                            "$ref": "#/definitions/res.DishListRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/search/sellers": {
            "get": {
                "description": "Search for sellers based on a query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Search sellers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched sellers",
                        "schema": {
                            "$ref": "#/definitions/res.SellerListRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/addDish": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a new dish for the seller",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Dish"
                ],
                "summary": "Create a dish",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file for the dish",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "categoryId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isAvailable",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isVeg",
                        "in": "formData"
                    },
                    {
                        "minLength": 3,
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "number",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "quantity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "name": "salePrice",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created dish",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/dishes": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of all dishes for the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Dish"
                ],
                "summary": "Get all dishes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category Id",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched dishes",
                        "schema": {
                            "$ref": "#/definitions/res.DishListRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/dishes/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a specific dish by ID for the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Dish"
                ],
                "summary": "Get a dish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched dish",
                        "schema": {
                            "$ref": "#/definitions/res.SingleDishRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Modify an existing dish by ID for the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Dish"
                ],
                "summary": "Update a dish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dish update request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UpdateDishReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated dish",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Remove a specific dish by ID for the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Dish"
                ],
                "summary": "Delete a dish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted dish",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/login": {
            "post": {
                "description": "Authenticate and log in as a seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller"
                ],
                "summary": "Seller Login",
                "parameters": [
                    {
                        "description": "Seller login request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.SellerLoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/res.SellerLoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/offers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches a list of offers associated with the seller",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Offer"
                ],
                "summary": "Get offers by seller",
                "responses": {
                    "200": {
                        "description": "Success: List of offers fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/res.OfferListRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to fetch offers",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/offers/addOffer": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create new offer for the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Offer"
                ],
                "summary": "Create an offer",
                "parameters": [
                    {
                        "description": "Create Offer Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.CreateOfferReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Offer updated successfully",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Error occurred while updating offer",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/offers/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates details of a specific offer for the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Offer"
                ],
                "summary": "Update an offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Offer Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UpdateOfferReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Offer updated successfully",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid inputs",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Error occurred while updating offer",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates the status of a specific offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Order"
                ],
                "summary": "Update offer status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New offer status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Offer status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Error occurred while updating offer status",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/orders": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "View details of all orders for the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Order"
                ],
                "summary": "View all orders for the seller",
                "responses": {
                    "200": {
                        "description": "Successfully fetched orders",
                        "schema": {
                            "$ref": "#/definitions/res.ViewAllOrdersRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/orders/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "View details of a specific order for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Order",
                    "Seller Order"
                ],
                "summary": "View a specific order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched order",
                        "schema": {
                            "$ref": "#/definitions/res.ViewOrderRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the status of a specific order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Order"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update order status request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UpdateOrderStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated order",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/register": {
            "post": {
                "description": "Register a new seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller"
                ],
                "summary": "Seller Sign Up",
                "parameters": [
                    {
                        "description": "Seller sign-up request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.SellerSignUpReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully signed up",
                        "schema": {
                            "$ref": "#/definitions/res.SellerLoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/seller/sales/daily": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches the daily sales report for the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller Sales"
                ],
                "summary": "Get daily sales report",
                "responses": {
                    "200": {
                        "description": "Success: Daily sales fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to fetch daily sales",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/sendOtp": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Send OTP to the user's registered phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Send OTP",
                "responses": {
                    "200": {
                        "description": "Successfully sent OTP",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign up as a user",
                "parameters": [
                    {
                        "description": "User sign-up request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UserSignUpReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully signed up",
                        "schema": {
                            "$ref": "#/definitions/res.UserLoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/user/sellers": {
            "get": {
                "description": "Retrieve a paginated list of sellers for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get paginated list of sellers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page number (default: 1)",
                        "name": "p",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "l",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched sellers",
                        "schema": {
                            "$ref": "#/definitions/res.SellerListRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/user/sellers/{id}": {
            "get": {
                "description": "Retrieve a specific seller by ID for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Get a seller",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched seller",
                        "schema": {
                            "$ref": "#/definitions/res.SingleSellerRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/verifyOtp": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Verify OTP for the user's registered phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "User OTP verification request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UserVerifyOtpReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully verified OTP",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Address": {
            "type": "object",
            "properties": {
                "addressId": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "houseName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pinCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "entities.Cart": {
            "type": "object",
            "properties": {
                "cartId": {
                    "type": "integer"
                },
                "dishes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.CartItem"
                    }
                },
                "sellerId": {
                    "type": "integer"
                }
            }
        },
        "entities.CartItem": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "dishId": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isAvailable": {
                    "type": "boolean"
                },
                "isVeg": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "salePrice": {
                    "type": "number"
                },
                "sellerId": {
                    "type": "integer"
                }
            }
        },
        "entities.Category": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "iconUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.CategoryOffer": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "offerId": {
                    "type": "integer"
                },
                "offerPercentage": {
                    "type": "integer"
                },
                "offerTitle": {
                    "type": "string"
                },
                "sellerId": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entities.Coupon": {
            "type": "object",
            "properties": {
                "couponCode": {
                    "type": "string"
                },
                "couponId": {
                    "type": "integer"
                },
                "couponType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "maximumAmtAllowed": {
                    "type": "integer"
                },
                "minimumAmtRequired": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entities.Dish": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "dishId": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isAvailable": {
                    "type": "boolean"
                },
                "isVeg": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "salePrice": {
                    "type": "number"
                },
                "sellerId": {
                    "type": "integer"
                }
            }
        },
        "entities.Order": {
            "type": "object",
            "properties": {
                "addressId": {
                    "type": "integer"
                },
                "couponCode": {
                    "type": "string"
                },
                "deliveryCharge": {
                    "type": "number"
                },
                "deliveryDate": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "itemCount": {
                    "type": "integer"
                },
                "orderDate": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                },
                "orderStatus": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string"
                },
                "paymentStatus": {
                    "type": "string"
                },
                "sellerId": {
                    "type": "integer"
                },
                "totalPrice": {
                    "type": "number"
                },
                "transactionId": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "entities.OrderItem": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "dishId": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isAvailable": {
                    "type": "boolean"
                },
                "isVeg": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "salePrice": {
                    "type": "number"
                },
                "sellerId": {
                    "type": "integer"
                }
            }
        },
        "entities.RedeemedCoupon": {
            "type": "object",
            "properties": {
                "couponCode": {
                    "type": "string"
                },
                "redeemedId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "entities.Seller": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pinCode": {
                    "type": "string"
                },
                "sellerId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "req.AdminLoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "req.ChangePasswordReq": {
            "type": "object",
            "properties": {
                "confirmNewPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string",
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "req.CreateCategoryReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "req.CreateCouponReq": {
            "type": "object",
            "required": [
                "couponCode"
            ],
            "properties": {
                "couponCode": {
                    "type": "string"
                },
                "couponType": {
                    "type": "string",
                    "enum": [
                        "AMOUNT",
                        "PERCENTAGE"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "maximumAmtAllowed": {
                    "type": "integer"
                },
                "minimumAmtRequired": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ]
                }
            }
        },
        "req.CreateOfferReq": {
            "type": "object",
            "required": [
                "categoryId",
                "offerPercentage",
                "offerTitle",
                "status"
            ],
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "offerPercentage": {
                    "type": "integer",
                    "maximum": 100
                },
                "offerTitle": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "CLOSED"
                    ]
                }
            }
        },
        "req.ForgotPasswordReq": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "phone": {
                    "type": "string"
                }
            }
        },
        "req.NewAddressReq": {
            "type": "object",
            "required": [
                "district",
                "houseName",
                "name",
                "phone",
                "pinCode",
                "state",
                "street"
            ],
            "properties": {
                "district": {
                    "type": "string"
                },
                "houseName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pinCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "req.NewOrderReq": {
            "type": "object",
            "required": [
                "addressId",
                "paymentMethod"
            ],
            "properties": {
                "addressId": {
                    "type": "string"
                },
                "couponCode": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string",
                    "enum": [
                        "COD",
                        "ONLINE"
                    ]
                }
            }
        },
        "req.ResetPasswordReq": {
            "type": "object",
            "required": [
                "otp",
                "phone"
            ],
            "properties": {
                "newPassword": {
                    "type": "string",
                    "minLength": 3
                },
                "otp": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "req.SellerLoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "req.SellerSignUpReq": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "pinCode"
            ],
            "properties": {
                "confirmPassword": {
                    "type": "string",
                    "minLength": 3
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "minLength": 3
                },
                "pinCode": {
                    "type": "string"
                }
            }
        },
        "req.UpdateAddressReq": {
            "type": "object",
            "required": [
                "district",
                "houseName",
                "name",
                "phone",
                "pinCode",
                "state",
                "street"
            ],
            "properties": {
                "district": {
                    "type": "string"
                },
                "houseName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pinCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "req.UpdateCategoryReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "req.UpdateDishReq": {
            "type": "object",
            "required": [
                "categoryId",
                "name",
                "price",
                "quantity"
            ],
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "isAvailable": {
                    "type": "boolean"
                },
                "isVeg": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "minLength": 3
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 0
                },
                "salePrice": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "req.UpdateOfferReq": {
            "type": "object",
            "required": [
                "categoryId",
                "offerPercentage",
                "offerTitle",
                "status"
            ],
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "offerPercentage": {
                    "type": "integer",
                    "maximum": 100
                },
                "offerTitle": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "CLOSED",
                        "DELETED"
                    ]
                }
            }
        },
        "req.UpdateOrderStatusReq": {
            "type": "object",
            "required": [
                "orderStatus"
            ],
            "properties": {
                "orderStatus": {
                    "type": "string",
                    "enum": [
                        "COOKING",
                        "FOOD READY",
                        "DELIVERED"
                    ]
                }
            }
        },
        "req.UpdateUserDetailsReq": {
            "type": "object",
            "required": [
                "email",
                "firstName"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "minLength": 3
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "req.UserLoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "req.UserSignUpReq": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "phone"
            ],
            "properties": {
                "confirmPassword": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "minLength": 3
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 3
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "req.UserVerifyOtpReq": {
            "type": "object",
            "required": [
                "otp"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                }
            }
        },
        "res.AdminLoginRes": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "res.AllCategoriesRes": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Category"
                    }
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.CommonRes": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                },
                "result": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "res.DishListRes": {
            "type": "object",
            "properties": {
                "dishList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Dish"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.GetAllCouponsForUserRes": {
            "type": "object",
            "properties": {
                "coupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Coupon"
                    }
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.GetRedeemedCouponsRes": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "redeemedCoupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.RedeemedCoupon"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.OfferListRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "offerList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.CategoryOffer"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.SellerListRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "sellerList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Seller"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.SellerLoginRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "res.SingleDishRes": {
            "type": "object",
            "properties": {
                "dish": {
                    "$ref": "#/definitions/entities.Dish"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.SingleSellerRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "seller": {
                    "$ref": "#/definitions/entities.Seller"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.UserDetailsRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entities.User"
                }
            }
        },
        "res.UserListRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.User"
                    }
                }
            }
        },
        "res.UserLoginRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "res.ViewAddressListRes": {
            "type": "object",
            "properties": {
                "addressList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Address"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.ViewAddressRes": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/entities.Address"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.ViewAllOrdersRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Order"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.ViewCartRes": {
            "type": "object",
            "properties": {
                "cart": {
                    "$ref": "#/definitions/entities.Cart"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "res.ViewOrderRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "order": {
                    "$ref": "#/definitions/entities.Order"
                },
                "orderItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.OrderItem"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Authentication using a JSON Web Token (JWT). The token should be included in the request header named \"Authorization\". The format of the header is: Authorization: Bearer \u003ctoken\u003e. Replace ` + "`" + `\u003ctoken\u003e` + "`" + ` with the actual JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "FoodieBuddie API",
	Description:      "API for managing and interacting with FoodieBuddie services.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
